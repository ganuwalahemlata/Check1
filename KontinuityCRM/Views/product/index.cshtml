@model PagedList.IPagedList<KontinuityCRM.Models.Product>

@{
    ViewBag.Title = "Products";
    ViewBag.icon = "fa-tags";    
}

<div class="page-header">
    <h1 class="row no-padding">
        <span class="col-sm-8 no-padding">
            @ViewBag.Title
        </span>
        <span class="col-sm-4">
            <span class="pull-right inline">
                <a href="@Url.Action("create")" class="btn btn-primary btn-round @Html.RenderHidden("create")">
                    <i class="ace-icon fa fa-plus"></i>
                    Create
                </a>
            </span>
        </span>
    </h1>
</div>

<div class="row">
    <div class="col-xs-12">

        @Html.Partial("_PageTop")

        <table class="table table-bordered table-striped table-hover">
            <thead>
                <tr>
                    <th class="@ViewBag.idOrderIcon">
                        @Html.ActionQueryLink("Id", "index", new { sortOrder = ViewBag.IdSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th class="@ViewBag.nameOrderIcon">
                        @Html.ActionQueryLink("Product", "index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th class="@ViewBag.categoryOrderIcon">
                        @Html.ActionQueryLink("Category", "index", new { sortOrder = ViewBag.CategorySortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th class="@ViewBag.priceOrderIcon">
                        @Html.ActionQueryLink("Price", "index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th class="@ViewBag.taxableOrderIcon">
                        @Html.ActionQueryLink("Taxable", "index", new { sortOrder = ViewBag.TaxableSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th class="@ViewBag.skuOrderIcon">
                        @Html.ActionQueryLink("SKU", "index", new { sortOrder = ViewBag.SKUSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.ProductId)</td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                        <td>@Html.DisplayFor(modelItem => item.IsTaxable)</td>
                        <td>@Html.DisplayFor(modelItem => item.SKU)</td>
                        <td>
                            @Html.ActionLink("Edit", "edit", new { id = item.ProductId }, new { @class = @Html.RenderHidden("edit") })
                            <span class='@Html.RenderHidden("variants")'>|</span>
                            @Html.ActionLink("Variants", "variants", new { id = item.ProductId }, new { @class = @Html.RenderHidden("variants") })
                            <span class='@Html.RenderHidden("delete")'>|</span>
                            @Html.ActionLink("Delete", "delete", new { id = item.ProductId }, new { @class = @Html.RenderHidden("delete") })
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @Html.Partial("_PageBottom", Model)

    </div>
</div>