@model KontinuityCRM.Models.RegisterModel

@{
    ViewBag.Title = "User";
    ViewBag.icon = "fa-user";
}

<div class="page-header">
    <h1 class="row no-padding">
        <span class="col-sm-8 no-padding">
            @ViewBag.Title
            <small>
                <i class="ace-icon fa fa-angle-double-right"></i>
                Create
            </small>
        </span>
    </h1>
</div>

@*<div id="breadcrumb">
	<a href="@Url.Action("index", "home")" title="Go to Home" class="tip-bottom"><i class="fa fa-home"></i> Home</a>
	<a href="@Url.Action("index")">Users</a>
	<a href="#" class="current">Create</a>
</div>*@

@*<div class="container-fluid">*@
    <div class="row">
        <div class="col-xs-12">
            @using (Html.BeginForm("create", "user", FormMethod.Post, new { @class = "form-horizontal" }))
            {

                <div class="widget-box">

                    <div class="widget-header">
                        <h5 class="widget-title">Profile</h5>
                        <div class="widget-toolbar">
                            <a href="#" data-action="collapse">
                                <i class="ace-icon fa fa-chevron-up"></i>
                            </a>
                        </div>
                    </div>


                    <div class="widget-body">
                        <div class="widget-main">
                            @Html.ValidationSummary(true)

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, new { @class = "col-sm-3 control-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.UserName, new { @class = "col-xs-12 col-sm-5" })
                                    @Html.ValidationMessageFor(model => model.UserName)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, new { @class = "col-sm-3 control-label" })
                                <div class="col-sm-9">
                                    @Html.PasswordFor(model => model.Password, new { @class = "col-xs-12 col-sm-5" })
                                    @Html.ValidationMessageFor(model => model.Password)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-sm-3 control-label" })
                                <div class="col-sm-9">
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "col-xs-12 col-sm-5" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, new { @class = "col-sm-3 control-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.Email, new { @class = "col-xs-12 col-sm-5" })
                                    @Html.ValidationMessageFor(model => model.Email)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TimeZoneId, new { @class = "col-sm-3 control-label" })
                                <div class="col-sm-9">
                                    <div class="col-xs-12 no-padding col-sm-5">
                                        @Html.DropDownListFor(model => model.TimeZoneId,
                                                ((IEnumerable<StandardTimeZone>)ViewBag.TimeZones).Select(s => new SelectListItem
                                                {
                                                    Value = s.Id.ToString(),
                                                    Text = s.DisplayName

                                                }), "", new { @class = "form-control" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.TimeZoneId)
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <div class="space-8"></div>

                <div class="widget-box" id="permissionsbox">

                    <div class="widget-header">
                        <h5 class="widget-title">Permission</h5>
                        <div class="widget-toolbar">
                            <a href="#" data-action="collapse">
                                <i class="ace-icon fa fa-chevron-up"></i>
                            </a>
                        </div>
                    </div>

                    <div class="widget-body">
                        <div class="widget-main">
                            <div class="form-group">
                                @Html.Label("Group", new { @class = "col-sm-3 control-label" })
                                <div class="col-sm-9">
                                    <div class="col-xs-12 no-padding col-sm-5">
                                        @Html.DropDownListFor(model => model.GroupId,
                                                ((IEnumerable<UserGroup>)ViewBag.GroupId).Select(s => new SelectListItem
                                                {
                                                    Value = s.UserGroupId.ToString(),
                                                    Text = String.Format("{0} ({1})", s.Name, s.Description)


                                                }), "Select Group", new { @class = "chosen form-control" })
                                    </div>
                                    @*//new SelectList(ViewBag.ShippingMethods, "Id", "Name"), "")*@
                                    @Html.ValidationMessageFor(model => model.GroupId)
                                </div>
                            </div>
                        </div>
                    </div>

                </div>       


                <div class="form-actions clearfix">
                    <div class="col-md-offset-3 col-md-9">
                        <button type="submit" class="btn btn-primary btn-sm btn-round">
                            <i class="ace-icon fa fa-check"></i>
                            Save
                        </button>
                        &nbsp;
                        <a href="@Url.Action("index")" class="btn btn-white btn-sm btn-default btn-round">
                            <i class="ace-icon fa fa-times red2"></i>
                            Cancel
                        </a>
                    </div>
                </div>



            }
        </div>
     
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/assets/js/ace/ace.widget-box.js"></script>
<script src="~/Scripts/chosen.jquery.min.js"></script>
    <script type="text/javascript">


        //$(function () {
        //    //var labels = $('#pck label');

        //    applyColumns($('#pck label'));
        //    applyColumns($('#pck1 label'));

        //});
        (function () {

            $(".chosen").chosen({ max_selected_options: 2 });
            $(".chosen-deselect").chosen({ allow_single_deselect: true });
            $(".chosen").chosen().change();
            $(".chosen").trigger('liszt:updated');
        }())

        function applyColumns(labels) {
            ncols = 3;
            col = 12 / ncols;
            j = Math.ceil(labels.length / ncols);

            $.each(labels, function (i, el) {
                if (i % j == 0) {
                    labels.slice(i, i + j).wrapAll('<div class="col-xs-12 col-sm-6 col-md-' + col + '">');
                }
            });
        }

    </script>
}

@section styles{
    <link href="~/Content/chosen.css" rel="stylesheet" />

}
