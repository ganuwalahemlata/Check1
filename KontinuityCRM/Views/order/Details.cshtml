@using KontinuityCRM.Models.Enums
@model KontinuityCRM.Models.Order

@{
    var title = string.Format("Order {0}", Model.OrderId);
    ViewBag.Title = title + " Details";
}

@section styles {
    <link href="~/Content/assets/css/datepicker.css" rel="stylesheet" />
}


<link href="~/Content/style.min.css" rel="stylesheet" />


<div class="page-header">
    <h1 class="row no-padding">
        <span class="col-sm-8 no-padding">
            @title
            <small>
                <i class="ace-icon fa fa-angle-double-right"></i>
                Details
            </small>
        </span>
    </h1>
</div>

<div class="row">
    <form method="post" class="form-horizontal">
        <div class="col-xs-12">

            @Html.HiddenFor(model => model.ProcessorId)
            @Html.HiddenFor(model => model.AffiliateId)
            @Html.HiddenFor(model => model.SubId)
            @Html.HiddenFor(model => model.Tax)
            @Html.HiddenFor(model => model.OrderId)
            @Html.HiddenFor(model => model.CustomerId)
            @Html.HiddenFor(model => model.IPAddress)
            @Html.HiddenFor(model => model.RMANumber)
            @Html.HiddenFor(model => model.Created)
            @Html.HiddenFor(model => model.Status)
            @Html.HiddenFor(model => model.CreditCardCVV)
            @Html.HiddenFor(model => model.CreditCardNumber)
            @Html.HiddenFor(model => model.SubTotal)
            @Html.HiddenFor(model => model.Total)
            @Html.HiddenFor(model => model.PaymentType)
            @Html.HiddenFor(model => model.CreatedUserId)
            @Html.HiddenFor(model => model.ParentId)
            @Html.HiddenFor(model => model.TopParentId)

            @for (int i = 0; i < Model.OrderProducts.Count; i++)
            {
                if (Model.OrderProducts.ElementAt(i).ProductId != Model.OrderProducts.ElementAt(i).NextProductId)
                {
                    @Html.HiddenFor(m => m.OrderProducts.ElementAt(i).BillValue, new { @Name = string.Format("OrderProducts[{0}].BillValue", i) })
                    @Html.HiddenFor(m => m.OrderProducts.ElementAt(i).BillType, new { @Name = string.Format("OrderProducts[{0}].BillType", i) })
                }
                @Html.HiddenFor(m => m.OrderProducts.ElementAt(i).FieldValue, new { @Name = string.Format("OrderProducts[{0}].FieldValue", i) })
                @Html.HiddenFor(m => m.OrderProducts.ElementAt(i).FieldName, new { @Name = string.Format("OrderProducts[{0}].FieldName", i) })
                @Html.HiddenFor(m => m.OrderProducts.ElementAt(i).Tax, new { @Name = string.Format("OrderProducts[{0}].Tax", i) })
                @Html.HiddenFor(m => m.OrderProducts.ElementAt(i).SKU, new { @Name = string.Format("OrderProducts[{0}].SKU", i) })
                @Html.HiddenFor(m => m.OrderProducts.ElementAt(i).Currency, new { @Name = string.Format("OrderProducts[{0}].Currency", i) })
                @Html.HiddenFor(m => m.OrderProducts.ElementAt(i).Cost, new { @Name = string.Format("OrderProducts[{0}].Cost", i) })
            }
            @Html.ValidationSummary()

            @* Order Summary *@
            <div class="widget-box">

                <div class="widget-header">
                    <h5 class="widget-title">Order Summary</h5>
                    <div class="widget-toolbar">

                        <a href="#" data-action="collapse">
                            <i class="ace-icon fa fa-chevron-up"></i>
                        </a>

                    </div>
                </div>

                <div class="widget-body">
                    <div class="widget-main">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                <span class="readonlydetail">@Html.DisplayFor(model => model.Status)</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TopParentId, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                <span class="readonlydetail">@Html.DisplayFor(model => model.TopParentId)</span>
                            </div>
                        </div>


                        @* Chargebackdate *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.ChargebackDate, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.ChargebackDate, new { @class = "col-xs-6 col-sm-3 datepicker" })
                            </div>
                        </div>

                        @* Shipped *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Shipped, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                <span class="readonlydetail">
                                    @if (Model.Shipped != null)
                                    {
                                        @Html.RadioButtonFor(model => model.Shipped, true)
                                        @:Yes
                                        @Html.RadioButtonFor(model => model.Shipped, false)
                                        @:No
                                    }
                                </span>
                            </div>
                        </div>

                        @* Tracking no *@
                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-right">Tracking #</label>
                            <div class="col-sm-9">
                                <span class="readonlydetail">@Model.OrderProducts.FirstOrDefault().TrackingNo</span>
                            </div>
                        </div>



                        @* AffiliateId *@
                        <div class="form-group" id="divAffiliateId">
                            @Html.LabelFor(model => model.AffiliateId, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                <span class="readonlydetail">
                                    @Html.DisplayFor(model => model.AffiliateId, new { @class = "col-xs-12 col-sm-5" })
                                </span>
                            </div>
                        </div>
                        @* SubId *@
                        <div class="form-group" id="divSubId">
                            @Html.LabelFor(model => model.SubId, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                <span class="readonlydetail">
                                    @Html.DisplayFor(model => model.SubId, new { @class = "col-xs-12 col-sm-5" })
                                </span>
                            </div>
                        </div>
                        @* IPAddress *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.IPAddress, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                <span class="readonlydetail">
                                    @Html.DisplayFor(model => model.IPAddress, new { @class = "col-xs-12 col-sm-5" })
                                </span>
                            </div>
                        </div>
                        @* RMA Reason *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.RMAReasonId, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-3">
                                @Html.DropDownListFor(model => model.RMAReasonId, ViewBag.RMAReasons as SelectList, "", new { @class = "col-xs-6 col-sm-10" })
                            </div>
                            <div class="col-sm-4" id="isShowError" style=" display:none; color:red">
                                Select RMA Reason to generate RMA Number
                            </div>
                        </div>

                        @* RMA Number *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.RMANumber, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-3">
                                <span class="readonlydetail">
                                    @*@Html.DisplayFor(model => model.RMANumber, new { @class = "col-xs-6 col-sm-10", @id = "txtRMANumber" })*@
                                    @Html.TextBoxFor(model => model.RMANumber, new { @class = "col-xs-6 col-sm-10 form-control RMANumber", @disabled = "disabled" })
                                </span>
                            </div>
                            <div class="col-sm-6">


                                <button type="button" value="Generate" id="btnGenerateRMA" class="btn-sm btn btn-primary" @if (!string.IsNullOrEmpty(Model.RMANumber)) { <text> style="display:none" </text>                                                       }>Generate</button>


                            </div>
                        </div>
                        @* --------------------------------------------Products-------------------------------------------------------- *@
                        <div class="col-sm-12 padding-10">
                            <h3 class="row header smaller lighter purple">
                                <span class="col-sm-6"> Products </span><!-- /.col -->
                            </h3>
                        </div>

                        <ul class="plist">
                            @Html.EditorFor(model => model.OrderProducts)
                        </ul>

                    </div>
                </div>
            </div>
            <div class="space-8"></div>
            @* Addresses *@

            <div class="widget-box">

                <div class="widget-header">
                    <h5 class="widget-title">Addresses</h5>
                    <div class="widget-toolbar">
                        <a href="#" data-action="collapse">
                            <i class="ace-icon fa fa-chevron-up"></i>
                        </a>
                    </div>
                </div>
                <div class="widget-body">
                    <div class="widget-main">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ShippingFirstName, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.ShippingFirstName, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.ShippingFirstName)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ShippingLastName, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.ShippingLastName, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.ShippingLastName)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.Email, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ShippingAddress1, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.ShippingAddress1, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.ShippingAddress1)
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.ShippingAddress2, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.ShippingAddress2, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.ShippingAddress2)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ShippingCity, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.ShippingCity, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.ShippingCity)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ShippingPostalCode, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.ShippingPostalCode, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.ShippingPostalCode)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ShippingProvince, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.ShippingProvince, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.ShippingProvince)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ShippingCountry, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                <div class="col-xs-12 col-sm-5 nopadding no-padding">
                                    @Html.DropDownListFor(model => model.ShippingCountry, new SelectList(ViewBag.Countries, "CountryAbbreviation", "Name"), new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.Phone, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.Phone)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BillingFirstName, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.BillingFirstName, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.BillingFirstName)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BillingLastName, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.BillingLastName, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.BillingLastName)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BillingAddress1, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.BillingAddress1, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.BillingAddress1)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BillingAddress2, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.BillingAddress2, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.BillingAddress2)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BillingCity, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.BillingCity, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.BillingCity)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BillingProvince, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.BillingProvince, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.BillingProvince)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BillingPostalCode, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.BillingPostalCode, new { @class = "col-xs-12 col-sm-5" })
                                @Html.ValidationMessageFor(model => model.BillingPostalCode)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BillingCountry, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                <div class="col-xs-12 col-sm-5 nopadding no-padding">
                                    @Html.DropDownListFor(model => model.BillingCountry, new SelectList(ViewBag.Countries, "CountryAbbreviation", "Name"), new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="space-8"></div>

            @* Payment Information *@
            <div class="widget-box">

                <div class="widget-header">
                    <h5 class="widget-title">Payment Information</h5>
                    <div class="widget-toolbar">

                        <a href="#" data-action="collapse">
                            <i class="ace-icon fa fa-chevron-up"></i>
                        </a>

                    </div>
                </div>

                <div class="widget-body">
                    <div class="widget-main">

                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-right">Transaction Id</label>
                            <div class="col-sm-9">
                                <span class="readonlydetail">
                                    @Model.Transactions.Where(t => t.Type == TransactionType.Sale).Select(t => t.TransactionId).FirstOrDefault()
                                </span>
                                @*<input type="text" disabled="disabled" readonly="readonly" value="@Model.Transactions.Where(t => t.Type == TransactionType.Sale).Select(t => t.TransactionId).FirstOrDefault()" />*@
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-right">Auth Id</label>
                            <div class="col-sm-9">
                                <span class="readonlydetail">
                                    @Model.Transactions.Where(t => t.Type == TransactionType.Auth).Select(t => t.TransactionId).FirstOrDefault()
                                </span>
                                @*<input type="text" disabled="disabled" readonly="readonly" value="@Model.Transactions.Where(t => t.Type == TransactionType.Auth).Select(t => t.TransactionId).FirstOrDefault()" />*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ShippingMethod, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                <div class="col-xs-12 col-sm-5 nopadding no-padding">
                                    @Html.DropDownListFor(model => model.ShippingMethodId, ((IEnumerable<ShippingMethod>
                                        )ViewBag.ShippingMethods).Select(s => new SelectListItem
                                        {
                                            Value = s.Id.ToString(),
                                            Text = String.Format("{0} ({1}) ${2}", s.Name, s.Id, s.Price.ToString("F"))

                                        }), new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                        @if (Model.Processor != null)
                        {
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">Preserved Processor</label>
                                <div class="col-sm-9">
                                    <span class="readonlydetail">
                                        @Model.Processor.Name
                                    </span>
                                </div>
                            </div>
                            @*if the order has a processor then show the processor' gateway*@
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">Gateway</label>
                                <div class="col-sm-9">
                                    <span class="readonlydetail">
                                        @Model.Processor.Gateway.Name
                                    </span>
                                </div>
                            </div>
                        }

                        @if (Model.Parent != null && Model.OrderProducts != null && Model.OrderProducts.Count > 0)
                        {
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">Discount</label>
                                <div class="col-sm-9">
                                    <span class="readonlydetail">
                                        $ @Model.OrderProducts.First().RebillDiscount.ToString("F")
                                    </span>
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-right">SubTotal</label>
                            <div class="col-sm-9">
                                <span class="readonlydetail">
                                    $ @Model.SubTotal.ToString("F")
                                </span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-right">ShippingTotal</label>
                            <div class="col-sm-9">
                                @{
                                    decimal shipTotal = 0;

                                    if ((Model.SubTotal + Model.Tax) < Model.Total && shipTotal == 0)
                                    {
                                        shipTotal = Model.Total - (Model.SubTotal + Model.Tax);
                                    }
                                }
                                <span class="readonlydetail">$ @shipTotal.ToString("F")</span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-right">Tax</label>
                            <div class="col-sm-9">
                                <span class="readonlydetail">$ @Html.DisplayFor(model => model.Tax, new { @class = "form-control" })</span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-right">Total</label>
                            <div class="col-sm-9">
                                <span class="readonlydetail"> $ @Model.Total.ToString("F")</span>
                            </div>
                        </div>

                        @if (Model.Status == OrderStatus.Approved || Model.Status == OrderStatus.PartiallyRefunded)
                        {

                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right">Void/Refund</label>
                                <div class="col-sm-9">
                                    $ <input type="text" name="refund_amount" value="@Model.Total">
                                    @Html.ActionLink("Void", "void", new { id = Model.OrderId }, new { @class = "btn btn-xs btn-primary" })
                                    @*@Html.ActionQueryLink("Void", "index", new { UserAction = UserAction.Void, oid = Model.OrderId }, new { @class = "btn btn-xs btn-primary" })*@

                                    @* <input type="submit" value="Refund" name="submitButton" class="btn-xs btn btn-primary" />*@

                                    @if (Model.ChargebackDate == null)
                                    {
                                        <button type="button" value="Refund" id="Refund" name="action:Refund" class="btn-xs btn btn-primary">Refund</button>
                                    }
                                    <div style="padding-top:5px;">
                                        Keep Recurring Active After Refund &nbsp;

                                        @Html.RadioButton("refund_keep_recurring", true)
                                        Yes
                                        @Html.RadioButton("refund_keep_recurring", false, true) No
                                    </div>
                                    <div>
                                        @Html.ValidationMessage("refund_amount")
                                    </div>
                                </div>
                            </div>

                        }

                    </div>
                </div>
            </div>



            <div class="space-8"></div>


            @* Shopping Cart Details Information *@
            <div class="widget-box">

                <div class="widget-header">
                    <h5 class="widget-title">Shopping Cart Details</h5>
                    <div class="widget-toolbar">

                        <a href="#" data-action="collapse">
                            <i class="ace-icon fa fa-chevron-up"></i>
                        </a>
                    </div>
                </div>
                <div class="widget-body">
                    <div class="widget-main">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CreditCardNumber, new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                <div class="col-xs-12 no-padding col-sm-4">
                                    @Html.HiddenFor(model => model.CreditCardNumber)
                                    @Html.TextBoxFor(model => model.CreditCardNumberX, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CreditCardNumber)
                                </div>
                            </div><div class="clearfix"></div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Credit Card Expiration", new { @class = "col-sm-3 control-label no-padding-right" })
                            <div class="col-sm-9">
                                <div class="col-xs-12 col-sm-5 nopadding no-padding">
                                    <div class="row">
                                        <div class="col-sm-5 col-xs-8">
                                            @Html.EnumDropdownListFor(model => model.CreditCardExpirationMonth, new { @class = "form-control" })
                                        </div>
                                        <div class="col-sm-4 col-xs-4">
                                            @Html.DropDownListFor(model => model.CreditCardExpirationYear, new SelectList(ViewBag.CreditCardExpirationYears, "Value", "Text"), new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div><div class="clearfix"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="space-8"></div>

            @* Transaction Details *@
            <div class="widget-box">

                <div class="widget-header">
                    <h5 class="widget-title">Transaction Details</h5>
                    <div class="widget-toolbar">

                        <a href="#" data-action="collapse">
                            <i class="ace-icon fa fa-chevron-up"></i>
                        </a>

                    </div>
                </div>

                <div class="widget-body">
                    <div class="widget-main">
                        @Html.Partial("_PageTopDetails", Model.TransactionsNew)
                        <div class="space-4"></div>

                        <table class="table table-bordered table-striped table-hover" width="100%">
                            <thead>
                                <tr>
                                    <th class="@ViewBag.dateIcon">
                                        @Html.ActionQueryLink("Date", "Details", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                                    </th>
                                    <th class="@ViewBag.typeIcon">
                                        @Html.ActionQueryLink("Transaction Type", "Details", new { sortOrder = ViewBag.TypeSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                                    </th>
                                    <th class="@ViewBag.statusIcon">
                                        @Html.ActionQueryLink("Status", "Details", new { sortOrder = ViewBag.StatusSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                                    </th>
                                    <th class="@ViewBag.amountIcon">
                                        @Html.ActionQueryLink("Amount", "Details", new { sortOrder = ViewBag.AmountSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                                    </th>
                                    <th class="@ViewBag.processorIcon">
                                        @Html.ActionQueryLink("Processor", "Details", new { sortOrder = ViewBag.ProcessorSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                                    </th>
                                    <th class="@ViewBag.responceIcon">
                                        @Html.ActionQueryLink("View Responce", "Details", new { sortOrder = ViewBag.ResponseSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{

                                    foreach (var tran in Model.TransactionsNew.OrderByDescending(n => n.Date))
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => tran.Date)</td>
                                            <td>@Html.DisplayFor(modelItem => tran.Type)</td>
                                            <td>@Html.DisplayFor(modelItem => tran.Status)</td>
                                            <td>@Html.DisplayFor(modelItem => tran.Amount)</td>
                                            <td>@Html.ActionLink(@tran.Processor.Name, "Edit", "Processor", new { id = @tran.Processor.Id }, new { })</td>
                                            <td> <textarea readonly style="width:100%;height:72px">@tran.Response</textarea></td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                        @Html.Partial("_PageBottom", Model.TransactionsNew)
                    </div>
                </div>
            </div>

            <div class="space-8"></div>


            @* Order History *@
            <div class="widget-box">

                <div class="widget-header">
                    <h5 class="widget-title">Order History</h5>
                    <div class="widget-toolbar">

                        <a href="#" data-action="collapse">
                            <i class="ace-icon fa fa-chevron-up"></i>
                        </a>

                    </div>
                </div>

                <div class="widget-body">
                    <div class="widget-main">

                        @* ------------------------Notes----------------------------------------- *@
                        <div class="col-sm-12 padding-10">
                            <h3 class="row header smaller lighter purple">
                                <span class="col-sm-6"> Notes </span><!-- /.col -->
                                <span class="col-sm-6">
                                    <span class="pull-right inline">
                                        <a href="@Url.Action(" index", "audit" , new { oid=Model.OrderId })" class="btn btn-default btn-sm">
                                            View Logs
                                        </a>
                                    </span>
                                </span><div class="clearfix"></div>
                            </h3>
                        </div>

                        <div class="form-group">

                            <div class="col-sm-7 col-sm-offset-2">
                                @Html.TextAreaFor(model => model.OrderNote, new { @class = "form-control" })
                            </div>
                            <div class="clearfix"></div>

                            <div class="col-sm-10 col-sm-offset-2" style="font-size:14px;">
                                @foreach (var note in Model.Notes.OrderByDescending(n => n.NoteDate))
                                {
                                    @note.NoteDate.ToString("MM/dd/yyyy hh:mm tt")
                                    <span> - </span>
                                    @note.Note
                                    <br />
                                }
                            </div><div class="clearfix"></div>
                        </div>
                        @* ------------------------Customer order log----------------------------------------- *@
                        <div class="col-sm-12 padding-10">
                            <h3 class="row header smaller lighter purple">
                                <span class="col-sm-6"> Customer Order Logs </span><!-- /.col -->
                            </h3>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-10 col-sm-offset-2" style="font-size:14px;">

                                <div id="html" class="demo">

                                    @CreateOrderTree(Model.Customer.Orders.OrderByDescending(n => n.Created))
                                    @*@{
                                        //  var date1 = System.DateTime.Now.ToString("MM/dd/yyyy");
                                        //  var date = System.DateTime.Now.ToString("MM/dd/yyyy");
                                                                                <ul>

                                                                                    foreach (var order in Model.Customer.Orders.OrderByDescending(n => n.Created).Where(n => n.ParentId == null))
                                                                                    {

                                                                                    <li data-jstree='{ "opened" : true }'>
                                                                                        @Html.ActionLink("Order " + order.OrderId.ToString(), "details", new { id = order.OrderId })
                                                                                        @foreach (var order1 in Model.Customer.Orders.OrderByDescending(n => n.Created).Where(n => n.ParentId == order.OrderId))
                                                                                        {

                                                                                            <ul>
                                                                                                <li data-jstree='{ "selected" : true }'>
                                                                                                    @order1.Created.ToString("MM/dd/yyyy hh:mm tt")
                                                                                                    @Html.ActionLink("Order " + order1.OrderId.ToString(), "details", new { id = order1.OrderId })
                                                                                                </li>
                                                                                            </ul>
                                                                                        }
                                                                                    </li>

                                                                                    }
                                                                                    }
                                                                                    }

                                                                                </ul>*@



                                </div>
                            </div><div class="clearfix"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="space-8"></div>

            <div class="clearfix form-actions">
                <div class="col-md-12 text-center">

                    @*<input type="submit" id="Save" value="Save" name="submitButton" class="btn-sm btn btn-primary" />*@
                    <a href="/order/Start/@Model.OrderId" class="btn btn-info2 btn-sm action-button">
                        <i class="fa fa-play"></i>
                        Start
                    </a>
                    <a href="/order/Stop/@Model.OrderId" class="btn btn-warning btn-sm action-button">
                        <i class="fa fa-stop"></i>
                        Stop
                    </a>
                    <button type="button" name="action:Save" value="Save" id="Save" class="btn-sm btn btn-primary">Save</button>

                    @Html.ActionLink("Place New Order", "new", new { id = Model.OrderId }, new { @class = "btn-sm btn btn-primary" })

                    @* force rebill only those order that are not test and have at least one schedule rebill *@
                    @if (!Model.IsTest && Model.OrderProducts.Any(o => o.NextDate != null))
                    {
                        @Html.ActionLink("Force Rebill Now", "rebill", new { id = Model.OrderId }, new { @class = "btn btn-sm btn-primary" })
                    }

                    @* Reattempt option for this order *@@if (Model.Status == OrderStatus.Declined && !Model.IsTest && !Model.IsRebill) // in this case can't be child orders
                    {
                        // allow if this order was recreated by the rebill then the recurring is on the parent else
                        // the order is an intial declined order so allow reattempt (start recurring)

                        // was an initial order so allow restart the recurring
                        @Html.ActionLink("Reattempt", "reattempt", new { id = Model.OrderId }, new { @class = "btn btn-sm btn-primary" })




                    }

                    @Html.ActionLink("Send Confirmation Email", "email", new { id = Model.OrderId }, new { @class = "btn-sm btn btn-primary" })

                    @if (Model.Status != OrderStatus.Fraud)
                    {
                        @Html.ActionLink("Mark Order as Fraud", "markAsFraud", new { id = Model.OrderId }, new { @class = "btn-sm btn btn-primary" })




                    }

                    <button type="button" value="Process RMA" id="btnProcessRMA" class="btn-sm btn btn-primary" @if (Model.Status == OrderStatus.OrderReturned || string.IsNullOrEmpty(Model.RMANumber)) { <text> style="display:none" </text>                                                        }>Process RMA</button>


                </div>
            </div>
            <div class="space-8"></div>

        </div>
    </form>
</div>

@helper CreateOrderTree(IEnumerable<Order> orders)
{

var parents = orders.Where(c => c.ParentId == null);
    <ul>
        @foreach (var v in parents)
        {
            @CreateChildTree(v);
        }
    </ul>
}
@helper CreateChildTree(Order order)
        {
    <li>
        @Html.ActionLink("Order #" + order.OrderId.ToString() + " (" + order.Status + ")", "details", "order", new { id = order.OrderId }, new { })
        @{ var len = Model.Customer.Orders.OrderByDescending(n => n.Created).Where(n => n.ParentId == order.OrderId).Count();}
        @if (len > 0)
        {
            <ul>
                @foreach (var v in Model.Customer.Orders.OrderByDescending(n => n.Created).Where(n => n.ParentId == order.OrderId))
                {

                    @CreateChildTree(v)

                }
          </ul>
        }
    </li>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/assets/js/ace/ace.widget-box.js"></script>
    <script src="~/Content/assets/js/date-time/bootstrap-datepicker.js"></script>

    <script src="~/js/jstree.min.js"></script>
    <script type="text/javascript">

        $(function () {
            $('#html').jstree({
                "core": {
                    "theme": { "icons": false }
                }
            });

        });
        $('#html').on("changed.jstree", function (e, data) {
            console.log(data.selected);
        });


        (function () {

            $('.datepicker').datepicker({
                autoclose: true,
                todayHighlight: true
            });

            $('.datepicker').change(function () {

                if ($(this).val() != "") {
                    $("#divAffiliateId").hide();
                    $("#divSubId").hide();
                } else {
                    $("#divAffiliateId").show();
                    $("#divSubId").show();
                }

            });

            if ($('.datepicker').val() != null && $('.datepicker').val() != "") {
                $("#divAffiliateId").hide()
                $("#divSubId").hide()
            }

            $('#Save').click(function (e) {
                // $(this).closest('form')
                $('form').append('<input type="hidden" name="action:Save" value="Save" />')
                    .submit()
            });

            $('#Refund').click(function (e) {
                $(this).closest('form')
                    .append('<input type="hidden" name="action:Refund" value="Refund" />')
                    .submit()
            });

            $('#btnGenerateRMA').click(function () {

                if ($('#RMAReasonId').val() != '') {

                    $.get('/RMA/GetRMANumber?OrderId=' + $('#OrderId').val() + "&RMAReasonId=" + $('#RMAReasonId').val(), function (response) {
                        $('#RMANumber').val(response.RMANumber);
                        $('#RMANumber').val(response.RMANumber);
                        $('.RMANumber').val(response.RMANumber);
                        $('#btnGenerateRMA').hide();
                        $('#Save').show();
                        $('#isShowError').hide();

                        if ($('#Status').val() == 'OrderReturned') {
                            $('#btnProcessRMA').hide();
                        }
                        else {
                            $('#btnProcessRMA').show();
                        }
                    })
                }
                else {
                    $('#isShowError').show();
                }
            });

            $('#btnProcessRMA').click(function () {
                $.post('/RMA/ProcessRMAReason', { OrderId: $('#OrderId').val() }, function () {
                    $('#btnProcessRMA').hide();
                });
            })

            if ($('#ChargebackDate').val() != undefined && $('#ChargebackDate').val() != '' && $('#ChargebackDate').val() != null) {

                noty({
                    text: 'Order ' + @Model.OrderId + ' is a chargeback',
                    layout: 'topRight',
                    closeWith: ['click'],
                    type: 'error'
                });
            }
        }());

    </script>

    <script>

        (function () {

            $('#Display').change(function () {
                var url = "@Html.Raw(Url.ActionQueryUrl("details", new { sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, display = "_kdpy_" }, "SearchString"))";
                //console.log(url.slice(0, -1));
                //window.location.href =  url.slice(0, -1) + $(this).val();
                window.location.href = url.replace("_kdpy_", $(this).val());
            });

        }());

    </script>
}

