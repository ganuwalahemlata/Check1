@model KontinuityCRM.Models.OrderProduct

@{
    ViewBag.Title = "Edit Order Product";
    ViewBag.icon = "fa-shopping-cart";
}

<div id="breadcrumb">
	<a href="@Url.Action("index", "home")" title="Go to Home" class="tip-bottom"><i class="fa fa-home"></i> Home</a>
    <a href="@Url.Action("index")">Orders</a>
    <a href="@Url.Action("products", new { id = Model.OrderId})">Products</a>
	<a href="#" class="current">Edit</a>
</div>

<div class="container-fluid">
    <div class="row">
        <form method="post" class="form-horizontal" id="mform">
            <div class="col-xs-8">
                @* Order Products *@
                <div class="widget-box">

                    <div class="widget-title">
                        <span class="icon"><i class="fa fa-shopping-cart"></i></span>
                        <h5>Edit Product</h5>
                    </div>

                    <div class="widget-content nopadding">

                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.OrderProductId)
                        @Html.HiddenFor(model => model.OrderId)
                        @Html.HiddenFor(model => model.ProductId)
                        @*@Html.HiddenFor(model => model.Price)*@
                        @Html.HiddenFor(model => model.Tax)
                        @Html.HiddenFor(model => model.Total)
                  
                        
                        <div class="form-group">
                            @Html.Label("Product Name", new { @class = "col-sm-4 col-md-4 col-lg-3 control-label" })
							<div class="col-sm-8 col-md-8 col-lg-9">
                                <input type="text" value="@Model.Product.Name" class="form-control input-sm" readonly="readonly" />
							</div>
						</div>

                        <div class="form-group">
                             @Html.LabelFor(model => model.Quantity, new { @class = "col-sm-4 col-md-4 col-lg-3 control-label" })
							<div class="col-sm-2 col-md-2">
                               @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control input-sm" })
							</div>
                            <div class="col-sm-6 col-md-6">
                                @Html.ValidationMessageFor(model => model.Quantity)
                            </div>
						</div>

                        <div class="form-group">
                             @Html.LabelFor(model => model.Price, new { @class = "col-sm-4 col-md-4 col-lg-3 control-label" })
							<div class="col-sm-2 col-md-2">
                               @Html.TextBoxFor(model => model.Price, new { @class = "form-control input-sm" })
							</div>
                            <div class="col-sm-6 col-md-6">
                                @Html.ValidationMessageFor(model => model.Price)
                            </div>
						</div>

                        <div class="form-group">
                             @Html.LabelFor(model => model.NextProductId, new { @class = "col-sm-4 col-md-4 col-lg-3 control-label" })
							<div class="col-sm-2 col-md-2">
                               @Html.TextBoxFor(model => model.NextProductId, new { @class = "form-control input-sm" })
							</div>
                            <div class="col-sm-6 col-md-6">
                                @Html.ValidationMessageFor(model => model.NextProductId)
                            </div>
						</div>

                        <div class="form-group">
                             @Html.LabelFor(model => model.NextDate, new { @class = "col-sm-4 col-md-4 col-lg-3 control-label " })
							<div class="col-sm-2 col-md-2">
                               @Html.TextBoxFor(model => model.NextDate, new { @class = "form-control input-sm datepicker" })
							</div>
                            <div class="col-sm-6 col-md-6">
                                @Html.ValidationMessageFor(model => model.NextDate)
                            </div>
						</div>

                        <div class="form-actions">
							<button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-save"></i> Save</button> or 
                            @Html.ActionLink("Cancel", "products", new { id = Model.OrderId }, new { @class = "text-danger" })
						</div>

                    </div>

                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}