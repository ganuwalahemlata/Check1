@model KontinuityCRM.Models.PrepaidCard

@{
    ViewBag.Title = "Prepaid Card";
    ViewBag.icon = "fa-envelope-o";
}

<div class="page-header">
    <h1 class="row no-padding">
        <span class="col-sm-8 no-padding">
            @ViewBag.Title
            <small>
                <i class="ace-icon fa fa-angle-double-right"></i>
                Create
            </small>
        </span>
    </h1>
</div>


<div class="row">
    <div class="col-xs-12">

        <form method="post" class="form-horizontal">

            @Html.ValidationSummary(true)

        
            <div class="form-group">
                @Html.LabelFor(model => model.First_Name, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.First_Name, new { @class = "col-xs-12 col-sm-5" })
                    @Html.ValidationMessageFor(model => model.First_Name)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Last_Name, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Last_Name, new { @class = "col-xs-12 col-sm-5" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Address, new { @class = "col-xs-12 col-sm-5" })
                    @Html.ValidationMessageFor(model => model.Address)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.City, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.City, new { @class = "col-xs-12 col-sm-5" })
                    @Html.ValidationMessageFor(model => model.City)


                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.State, new { @class = "col-xs-12 col-sm-5" })
                    @Html.ValidationMessageFor(model => model.State)
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Country, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @*@Html.TextBoxFor(model => model.ShippingCountry, new { @class = "col-xs-12 col-sm-5" })*@
                    <div class="col-xs-12 no-padding col-sm-5">
                        @Html.DropDownListFor(model => model.Country, new SelectList(ViewBag.Countries,
                           "CountryAbbreviation", "Name"), "", new { @class = "form-control chosen" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Country)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Zip, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Zip, new { @class = "col-xs-12 col-sm-5" })
                    @Html.ValidationMessageFor(model => model.Zip)


                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Phone, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Phone, new { @class = "col-xs-12 col-sm-5" })
                    @Html.ValidationMessageFor(model => model.Phone)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Email, new { @class = "col-xs-12 col-sm-5" })
                    @Html.ValidationMessageFor(model => model.Email)


                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Amount, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Amount, new { @class = "col-xs-12 col-sm-5" })
                    @Html.ValidationMessageFor(model => model.Amount)
                </div>
            </div>

            <div class="form-group" style="padding:0;">
                @Html.Label("Select a PaymentType", new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.DropDownList("PaymentType", (IEnumerable<SelectListItem>)ViewBag.PaymentType, new { id = "PaymentType", @class = "chosen" })


                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Number, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Number, new { @class = "", @size = 17 })
                    @Html.ValidationMessageFor(model => model.Number)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Expiration Date", new { @class = "col-sm-3 control-label" })
                <div class="col-sm-5">
                    <div class="row">
                        <div class="col-sm-5 col-xs-8">
                            @*@Html.EnumDropdownListFor(model => model.CreditCardExpirationMonth, new { @class = "form-control" })*@
                            @Html.DropDownListFor(model => model.CreditCardExpirationMonth,
                               EnumHelper<Month>.GetValue(DateTime.Today.Month).ToSelectIntList(), new { @class = "form-control chosen" })
                        </div>
                        <div class="col-sm-4 col-xs-4">
                            @Html.DropDownListFor(model => model.CreditCardExpirationYear,
                               new SelectList(ViewBag.CreditCardExpirationYears, "Value", "Text"), new { @class = "form-control chosen" })
                        </div>
                    </div>
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreditCardCVV, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.CreditCardCVV, new { @class = "", @size = 4 })
                    @Html.ValidationMessageFor(model => model.CreditCardCVV)
                </div>
            </div>


           

            




            <div class="clearfix form-actions">
                <div class="col-md-offset-3 col-md-9">
                    <button type="submit" class="btn btn-primary btn-round">
                        <i class="ace-icon fa fa-check"></i>
                        Create
                    </button>
                    &nbsp; &nbsp; &nbsp;
                    <a href="@Url.Action("index")" class="btn btn-white btn-default btn-round">
                        <i class="ace-icon fa fa-times red2"></i>
                        Cancel
                    </a>
                </div>
            </div>


        </form>

    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/ckeditor/ckeditor.js"></script>
    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script type="text/javascript">

        (function () {

            $(".chosen").chosen({ max_selected_options: 2 });
            $(".chosen-deselect").chosen({ allow_single_deselect: true });
            $(".chosen").chosen().change();
            $(".chosen").trigger('liszt:updated');
        }())
    </script>
}


@section styles{
    <link href="~/Content/chosen.css" rel="stylesheet" />

}
