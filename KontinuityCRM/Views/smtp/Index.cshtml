@model PagedList.IPagedList<KontinuityCRM.Models.SmtpServer>

@{
    ViewBag.Title = "SMTP Mail Servers";
}

<div class="page-header">
    <h1 class="row no-padding">
        <span class="col-sm-8 no-padding">
            @ViewBag.Title
        </span>
        <span class="col-sm-4">
            <span class="pull-right inline">
                <a href="@Url.Action("create")" class="btn btn-primary btn-round @Html.RenderHidden("create")">
                    <i class="ace-icon fa fa-plus"></i>
                    Create
                </a>
            </span>
        </span>
    </h1>
</div>

<div class="row">
    <div class="col-xs-12">
        @Html.Partial("_PageTop")
        <table class="table table-bordered table-striped table-hover">
            <thead>
                <tr>
                    <th class="@ViewBag.idOrderIcon">
                        @Html.ActionQueryLink("Id", "index", new { sortOrder = ViewBag.IdSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th class="@ViewBag.nameOrderIcon">
                        @Html.ActionQueryLink("Name", "index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th class="@ViewBag.emailOrderIcon">
                        @Html.ActionQueryLink("Email", "index", new { sortOrder = ViewBag.emailSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th class="@ViewBag.lastupdateOrderIcon">
                        @Html.ActionQueryLink("Last Update", "index", new { sortOrder = ViewBag.lastupdateSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th class="@ViewBag.updatedbyOrderIcon">
                        @Html.ActionQueryLink("Updated By", "index", new { sortOrder = ViewBag.updatedbySortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th class="@ViewBag.authenticatedOrderIcon">
                        @Html.ActionQueryLink("Authenticated", "index", new { sortOrder = ViewBag.authenticatedSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th class="@ViewBag.publishOrderIcon">
                        @Html.ActionQueryLink("Publish", "index", new { sortOrder = ViewBag.publishSortParm, currentFilter = ViewBag.CurrentFilter }, null, "SearchString,display,page")
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Id)</td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>
                            @item.Email
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.LastUpdate)</td>
                        <td>@Html.DisplayFor(modelItem => item.UpdatedBy.UserName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Authenticated)</td>
                        <td>@Html.DisplayFor(modelItem => item.Publish)</td>
                        <td>
                            @Html.ActionLink("Edit", "edit", new { id = item.Id }, new { @class = @Html.RenderHidden("edit") })
                            <span class='@Html.RenderHidden("delete")'>|</span>
                            @Html.ActionLink("Delete", "delete", new { id = item.Id }, new { @class = @Html.RenderHidden("delete") })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @Html.Partial("_PageBottom", Model)
    </div>
</div>